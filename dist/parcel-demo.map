{"version":3,"sources":["module-1.js","module-2.js","index.js","../../npm/lib/node_modules/parcel-bundler/src/builtins/bundle-url.js","../../npm/lib/node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["fn","alert","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,EAAT,GAAc;AACZC,QAAM,KAAN;AACD;;kBAEcD;;;;;;;ACJf,SAASA,EAAT,GAAc;AACZE,UAAQC,GAAR,CAAY,UAAZ;AACD;;kBAEcH;;AEJf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AF3BA;;;;AAGA;;;;AAGA;;;;AATAE,QAAQC,GAAR,CAAY,aAAZ;AACAD,QAAQC,GAAR,CAAY,eAAZ;;AAGA;;AAGA","file":"parcel-demo.map","sourcesContent":["function fn() {\n  alert('自动化')\n}\n\nexport default fn\n","function fn() {\n  console.log('11111111')\n}\n\nexport default fn\n","console.log(\"hello world\");\nconsole.log('hello parcel:')\n\nimport fn from './module-1.js'\nfn()\n\nimport fn2 from './module-2.js'\nfn2()\n\nimport './default.scss'\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}